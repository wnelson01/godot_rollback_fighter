[gd_scene load_steps=10 format=2]

[ext_resource path="res://Player/Player.gd" type="Script" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]
[ext_resource path="res://addons/godot-rollback-netcode/NetworkRandomNumberGenerator.gd" type="Script" id=3]
[ext_resource path="res://Player/Ground.gd" type="Script" id=4]
[ext_resource path="res://Player/StateMachine.gd" type="Script" id=5]
[ext_resource path="res://Player/Air.gd" type="Script" id=6]
[ext_resource path="res://Player/Free.gd" type="Script" id=7]
[ext_resource path="res://Player/Label.gd" type="Script" id=8]

[sub_resource type="SGRectangleShape2D" id=1]
extents_x = 2097152
extents_y = 2097152

[node name="Player" type="SGKinematicBody2D"]
script = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 2 )
centered = false

[node name="NetworkRandomNumberGenerator" type="Node" parent="."]
script = ExtResource( 3 )

[node name="StateMachine" type="Node" parent="." groups=["network_sync"]]
script = ExtResource( 5 )
current_state = NodePath("Free/Ground")

[node name="Free" type="Node" parent="StateMachine"]
script = ExtResource( 7 )
state_machine = NodePath("..")

[node name="Ground" type="Node" parent="StateMachine/Free"]
script = ExtResource( 4 )

[node name="Air" type="Node" parent="StateMachine/Free"]
script = ExtResource( 6 )

[node name="SGCollisionShape2D" type="SGCollisionShape2D" parent="."]
visible = false
position = Vector2( 32, 32 )
fixed_position_x = 2097152
fixed_position_y = 2097152
shape = SubResource( 1 )

[node name="Label" type="Label" parent="."]
margin_left = 13.0
margin_top = -15.0
margin_right = 53.0
margin_bottom = -1.0
script = ExtResource( 8 )
__meta__ = {
"_edit_use_anchors_": true
}

[connection signal="state_changed" from="StateMachine" to="Label" method="_on_StateMachine_state_changed"]
[connection signal="change_state" from="StateMachine/Free/Ground" to="StateMachine" method="_on_Ground_change_state"]
[connection signal="change_state" from="StateMachine/Free/Air" to="StateMachine" method="_on_Air_change_state"]
[connection signal="on_ground" from="StateMachine/Free/Air" to="StateMachine" method="_on_Air_on_ground"]
